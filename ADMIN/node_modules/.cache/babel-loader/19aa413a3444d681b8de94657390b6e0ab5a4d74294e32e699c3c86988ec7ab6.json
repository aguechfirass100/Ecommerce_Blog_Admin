{"ast":null,"code":"import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nimport { getProductFailure, getProductStart, getProductSuccess, deleteProductFailure, deleteProductStart, deleteProductSuccess, updateProductFailure, updateProductStart, updateProductSuccess, addProductFailure, addProductStart, addProductSuccess, emptyFieldFailure } from \"./productRedux\";\nimport { deleteUserFailure, deleteUserStart, deleteUserSuccess, updateUserFailure, updateUserStart, updateUserSuccess, getUsersFailure, getUsersStart, getUsersSuccess, addUserFailure, addUserStart, addUserSuccess } from \"./userRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const updateProduct = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n  try {\n    // update\n    const res = await userRequest.put(`/products/${id}`, product);\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (err) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n  const emptyInputs = Object.keys(product).filter(key => !product[key]);\n  if (emptyInputs.length > 0) {\n    dispatch(emptyFieldFailure());\n    return;\n  }\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (err) {\n    dispatch(addProductFailure());\n  }\n};\nexport const getUsers = async dispatch => {\n  dispatch(getUsersStart());\n  try {\n    const res = await userRequest.get(\"/users\");\n    dispatch(getUsersSuccess(res.data));\n    console.log(res.data);\n  } catch (err) {\n    dispatch(getUsersFailure());\n  }\n};\nexport const deleteUser = async (id, dispatch) => {\n  dispatch(deleteUserStart());\n  try {\n    const res = await userRequest.delete(`/users/${id}`);\n    dispatch(deleteUserSuccess(id));\n  } catch (err) {\n    dispatch(deleteUserFailure());\n  }\n};\nexport const updateUser = async (id, user, dispatch) => {\n  dispatch(updateUserStart());\n  try {\n    const res = await userRequest.put(`/users/${id}`, user);\n    dispatch(updateUserSuccess(res.data));\n  } catch (err) {\n    dispatch(updateUserFailure());\n  }\n};\nexport const addUser = async (user, dispatch) => {\n  dispatch(addUserStart());\n  try {\n    const res = await userRequest.post(`/users`, user);\n    dispatch(addUserSuccess(res.data));\n  } catch (err) {\n    dispatch(addUserFailure());\n  }\n};","map":{"version":3,"names":["loginFailure","loginStart","loginSuccess","publicRequest","userRequest","getProductFailure","getProductStart","getProductSuccess","deleteProductFailure","deleteProductStart","deleteProductSuccess","updateProductFailure","updateProductStart","updateProductSuccess","addProductFailure","addProductStart","addProductSuccess","emptyFieldFailure","deleteUserFailure","deleteUserStart","deleteUserSuccess","updateUserFailure","updateUserStart","updateUserSuccess","getUsersFailure","getUsersStart","getUsersSuccess","addUserFailure","addUserStart","addUserSuccess","login","dispatch","user","res","post","data","err","getProducts","get","deleteProduct","id","delete","updateProduct","product","put","addProduct","emptyInputs","Object","keys","filter","key","length","getUsers","console","log","deleteUser","updateUser","addUser"],"sources":["C:/Users/AGFirass/React/New folder/ADMIN/src/redux/apiCalls.js"],"sourcesContent":["import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\r\nimport { publicRequest, userRequest } from \"../requestMethods\";\r\nimport {\r\n  getProductFailure,\r\n  getProductStart,\r\n  getProductSuccess,\r\n  deleteProductFailure,\r\n  deleteProductStart,\r\n  deleteProductSuccess,\r\n  updateProductFailure,\r\n  updateProductStart,\r\n  updateProductSuccess,\r\n  addProductFailure,\r\n  addProductStart,\r\n  addProductSuccess,\r\n  emptyFieldFailure,\r\n} from \"./productRedux\";\r\nimport {\r\n    deleteUserFailure,\r\n    deleteUserStart,\r\n    deleteUserSuccess,\r\n    updateUserFailure,\r\n    updateUserStart,\r\n    updateUserSuccess,\r\n    getUsersFailure,\r\n    getUsersStart,\r\n    getUsersSuccess,\r\n    addUserFailure,\r\n    addUserStart,\r\n    addUserSuccess,\r\n  } from \"./userRedux\";\r\n\r\nexport const login = async (dispatch, user) => {\r\n  dispatch(loginStart());\r\n  try {\r\n    const res = await publicRequest.post(\"/auth/login\", user);\r\n    dispatch(loginSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(loginFailure());\r\n  }\r\n};\r\n\r\nexport const getProducts = async (dispatch) => {\r\n  dispatch(getProductStart());\r\n  try {\r\n    const res = await publicRequest.get(\"/products\");\r\n    dispatch(getProductSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(getProductFailure());\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (id, dispatch) => {\r\n  dispatch(deleteProductStart());\r\n  try {\r\n    const res = await userRequest.delete(`/products/${id}`);\r\n    dispatch(deleteProductSuccess(id));\r\n  } catch (err) {\r\n    dispatch(deleteProductFailure());\r\n  }\r\n};\r\n\r\nexport const updateProduct = async (id, product, dispatch) => {\r\n  dispatch(updateProductStart());\r\n  try {\r\n    // update\r\n    const res = await userRequest.put(`/products/${id}`, product);\r\n    dispatch(updateProductSuccess({ id, product }));\r\n  } catch (err) {\r\n    dispatch(updateProductFailure());\r\n  }\r\n};\r\nexport const addProduct = async (product, dispatch) => {\r\n  dispatch(addProductStart());\r\n\r\n  const emptyInputs = Object.keys(product).filter((key) => !product[key]);\r\n  if (emptyInputs.length > 0) {\r\n    dispatch(emptyFieldFailure());\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const res = await userRequest.post(`/products`, product);\r\n    dispatch(addProductSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(addProductFailure());\r\n  }\r\n};\r\n\r\n\r\nexport const getUsers = async (dispatch) => {\r\n    dispatch(getUsersStart());\r\n    try {\r\n      const res = await userRequest.get(\"/users\");\r\n      dispatch(getUsersSuccess(res.data));\r\n      console.log(res.data);\r\n    } catch (err) {\r\n      dispatch(getUsersFailure());\r\n    }\r\n  };\r\n  \r\n  export const deleteUser = async (id, dispatch) => {\r\n    dispatch(deleteUserStart());\r\n    try {\r\n      const res = await userRequest.delete(`/users/${id}`);\r\n      dispatch(deleteUserSuccess(id));\r\n    } catch (err) {\r\n      dispatch(deleteUserFailure());\r\n    }\r\n  };\r\n  \r\n  export const updateUser = async (id, user, dispatch) => {\r\n    dispatch(updateUserStart());\r\n    try {\r\n      const res = await userRequest.put(`/users/${id}`, user);\r\n      dispatch(updateUserSuccess(res.data));\r\n    } catch (err) {\r\n      dispatch(updateUserFailure());\r\n    }\r\n  };\r\n  \r\n  export const addUser = async (user, dispatch) => {\r\n    dispatch(addUserStart());\r\n    try {\r\n      const res = await userRequest.post(`/users`, user);\r\n      dispatch(addUserSuccess(res.data));\r\n    } catch (err) {\r\n      dispatch(addUserFailure());\r\n    }\r\n  };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}