{"ast":null,"code":"import { publicRequest, userRequest } from \"../requestMethods\";\nimport { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { registerFailure, registerStart, registerSuccess } from \"./userRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (error) {\n    dispatch(loginFailure());\n  }\n};\nexport const register = async (dispatch, user) => {\n  dispatch(registerStart());\n  try {\n    const res = await publicRequest.post(\"/auth/register\", user);\n    dispatch(registerSuccess(res.data));\n  } catch (error) {\n    dispatch(registerFailure());\n  }\n};\n\n// export const getUserOrders = async (id) => {\n//     try {\n//         const res = await userRequest.get(`/orders/find/${id}`)\n//         return res.data\n//     } catch (error) {\n//         console.log(error)\n//     }\n// }\n\nexport const getUserOrders = async id => {\n  try {\n    const res = await userRequest().get(`/orders/find/${id}`);\n    //console.log(\"Response data:\", res.data); // Log the response data\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// export const makeUserOrder = async (order) => {\n//     try {\n//       const res = await publicRequest.post(\"/users\", order);\n//       return res.data;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   export const deleteUserOrder = async (userId, orderId) => {\n//     try {\n//       const res = await userRequest.delete(`/users/${userId}/orders/${orderId}`);\n//       return res.data;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   export const getUserOrders = async () => {\n//     try {\n//       const res = await userRequest.get(\"/users\");\n//       return res.data;\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };","map":{"version":3,"names":["publicRequest","userRequest","loginFailure","loginStart","loginSuccess","registerFailure","registerStart","registerSuccess","login","dispatch","user","res","post","data","error","register","getUserOrders","id","get","console","log"],"sources":["C:/Users/AGFirass/React/New folder/CLIENT/src/redux/apiCalls.js"],"sourcesContent":["import { publicRequest, userRequest } from \"../requestMethods\"\r\nimport { loginFailure, loginStart, loginSuccess } from \"./userRedux\"\r\nimport { registerFailure, registerStart, registerSuccess } from \"./userRedux\"\r\n\r\nexport const login = async (dispatch, user) => {\r\n    dispatch(loginStart())\r\n    try {\r\n        const res = await publicRequest.post(\"/auth/login\", user)\r\n        dispatch(loginSuccess(res.data))\r\n    } catch (error) {\r\n        dispatch(loginFailure())\r\n    }\r\n}\r\n\r\nexport const register = async (dispatch, user) => {\r\n    dispatch(registerStart())\r\n    try {\r\n        const res = await publicRequest.post(\"/auth/register\", user)\r\n        dispatch(registerSuccess(res.data))\r\n    } catch (error) {\r\n        dispatch(registerFailure())\r\n    }\r\n}\r\n\r\n// export const getUserOrders = async (id) => {\r\n//     try {\r\n//         const res = await userRequest.get(`/orders/find/${id}`)\r\n//         return res.data\r\n//     } catch (error) {\r\n//         console.log(error)\r\n//     }\r\n// }\r\n\r\nexport const getUserOrders = async (id) => {\r\n    try {\r\n      const res = await userRequest().get(`/orders/find/${id}`);\r\n      //console.log(\"Response data:\", res.data); // Log the response data\r\n      return res.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n// export const makeUserOrder = async (order) => {\r\n//     try {\r\n//       const res = await publicRequest.post(\"/users\", order);\r\n//       return res.data;\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   export const deleteUserOrder = async (userId, orderId) => {\r\n//     try {\r\n//       const res = await userRequest.delete(`/users/${userId}/orders/${orderId}`);\r\n//       return res.data;\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   export const getUserOrders = async () => {\r\n//     try {\r\n//       const res = await userRequest.get(\"/users\");\r\n//       return res.data;\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n  \r\n\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,WAAW,QAAQ,mBAAmB;AAC9D,SAASC,YAAY,EAAEC,UAAU,EAAEC,YAAY,QAAQ,aAAa;AACpE,SAASC,eAAe,EAAEC,aAAa,EAAEC,eAAe,QAAQ,aAAa;AAE7E,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,KAAK;EAC3CD,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC;EACtB,IAAI;IACA,MAAMQ,GAAG,GAAG,MAAMX,aAAa,CAACY,IAAI,CAAC,aAAa,EAAEF,IAAI,CAAC;IACzDD,QAAQ,CAACL,YAAY,CAACO,GAAG,CAACE,IAAI,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,QAAQ,CAACP,YAAY,CAAC,CAAC,CAAC;EAC5B;AACJ,CAAC;AAED,OAAO,MAAMa,QAAQ,GAAG,MAAAA,CAAON,QAAQ,EAAEC,IAAI,KAAK;EAC9CD,QAAQ,CAACH,aAAa,CAAC,CAAC,CAAC;EACzB,IAAI;IACA,MAAMK,GAAG,GAAG,MAAMX,aAAa,CAACY,IAAI,CAAC,gBAAgB,EAAEF,IAAI,CAAC;IAC5DD,QAAQ,CAACF,eAAe,CAACI,GAAG,CAACE,IAAI,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,QAAQ,CAACJ,eAAe,CAAC,CAAC,CAAC;EAC/B;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMW,aAAa,GAAG,MAAOC,EAAE,IAAK;EACvC,IAAI;IACF,MAAMN,GAAG,GAAG,MAAMV,WAAW,CAAC,CAAC,CAACiB,GAAG,CAAE,gBAAeD,EAAG,EAAC,CAAC;IACzD;IACA,OAAON,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdK,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACpB;AACF,CAAC;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}