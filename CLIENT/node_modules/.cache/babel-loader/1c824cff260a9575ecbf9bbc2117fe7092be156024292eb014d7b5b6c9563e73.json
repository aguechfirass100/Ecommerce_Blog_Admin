{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    // addProduct: (state, action) => {\n    //     state.quantity += 1\n    //     state.products.push(action.payload)\n    //     state.total += action.payload.price * action.payload.quantity\n    // },\n    addProduct: (state, action) => {\n      const productToAdd = action.payload;\n      const existingProduct = state.products.find(product => product._id === productToAdd._id);\n      if (existingProduct) {\n        existingProduct.quantity += productToAdd.quantity;\n      } else {\n        state.products.push(productToAdd);\n      }\n      state.quantity += productToAdd.quantity;\n      state.total += productToAdd.price * productToAdd.quantity;\n    },\n    clearCart: state => {\n      state.products = [];\n      state.quantity = 0;\n      state.total = 0;\n    },\n    deleteProduct: (state, action) => {\n      const productIdToDelete = action.payload;\n\n      // Find the index of the product with the matching productId\n      const productIndexToDelete = state.products.findIndex(product => product.productId === productIdToDelete);\n\n      // If the product is found, remove it from the products array\n      if (productIndexToDelete !== -1) {\n        const deletedProduct = state.products[productIndexToDelete];\n\n        // Update the quantity and total\n        state.quantity -= deletedProduct.quantity;\n        state.total -= deletedProduct.price * deletedProduct.quantity;\n\n        // Remove the product from the products array\n        state.products.splice(productIndexToDelete, 1);\n      }\n\n      // Ensure quantity and total are not negative\n      state.quantity = Math.max(state.quantity, 0);\n      state.total = Math.max(state.total, 0);\n    }\n  }\n});\nexport const {\n  addProduct,\n  clearCart,\n  deleteProduct\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","productToAdd","payload","existingProduct","find","product","_id","push","price","clearCart","deleteProduct","productIdToDelete","productIndexToDelete","findIndex","productId","deletedProduct","splice","Math","max","actions","reducer"],"sources":["C:/Users/AGFirass/React/New folder/CLIENT/src/redux/cartRedux.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst cartSlice = createSlice(\r\n    {\r\n        name: \"cart\",\r\n        initialState: {\r\n            products: [],\r\n            quantity: 0,\r\n            total: 0\r\n        },\r\n        reducers: {\r\n            // addProduct: (state, action) => {\r\n            //     state.quantity += 1\r\n            //     state.products.push(action.payload)\r\n            //     state.total += action.payload.price * action.payload.quantity\r\n            // },\r\n            addProduct: (state, action) => {\r\n              const productToAdd = action.payload;\r\n              const existingProduct = state.products.find(product => product._id === productToAdd._id);\r\n            \r\n              if (existingProduct) {\r\n                existingProduct.quantity += productToAdd.quantity;\r\n              } else {\r\n                state.products.push(productToAdd);\r\n              }\r\n            \r\n              state.quantity += productToAdd.quantity;\r\n              state.total += productToAdd.price * productToAdd.quantity;\r\n            },\r\n            clearCart: (state) => {\r\n                state.products = [];\r\n                state.quantity = 0;\r\n                state.total = 0;\r\n              },\r\n              deleteProduct: (state, action) => {\r\n                const productIdToDelete = action.payload;\r\n              \r\n                // Find the index of the product with the matching productId\r\n                const productIndexToDelete = state.products.findIndex(product => product.productId === productIdToDelete);\r\n              \r\n                // If the product is found, remove it from the products array\r\n                if (productIndexToDelete !== -1) {\r\n                  const deletedProduct = state.products[productIndexToDelete];\r\n              \r\n                  // Update the quantity and total\r\n                  state.quantity -= deletedProduct.quantity;\r\n                  state.total -= deletedProduct.price * deletedProduct.quantity;\r\n              \r\n                  // Remove the product from the products array\r\n                  state.products.splice(productIndexToDelete, 1);\r\n                }\r\n              \r\n                // Ensure quantity and total are not negative\r\n                state.quantity = Math.max(state.quantity, 0);\r\n                state.total = Math.max(state.total, 0);\r\n              },   \r\n        }\r\n    }\r\n)\r\n\r\nexport const { addProduct, clearCart, deleteProduct } = cartSlice.actions\r\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CACzB;EACIE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACN;IACA;IACA;IACA;IACA;IACAC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMC,YAAY,GAAGD,MAAM,CAACE,OAAO;MACnC,MAAMC,eAAe,GAAGJ,KAAK,CAACL,QAAQ,CAACU,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,GAAG,KAAKL,YAAY,CAACK,GAAG,CAAC;MAExF,IAAIH,eAAe,EAAE;QACnBA,eAAe,CAACR,QAAQ,IAAIM,YAAY,CAACN,QAAQ;MACnD,CAAC,MAAM;QACLI,KAAK,CAACL,QAAQ,CAACa,IAAI,CAACN,YAAY,CAAC;MACnC;MAEAF,KAAK,CAACJ,QAAQ,IAAIM,YAAY,CAACN,QAAQ;MACvCI,KAAK,CAACH,KAAK,IAAIK,YAAY,CAACO,KAAK,GAAGP,YAAY,CAACN,QAAQ;IAC3D,CAAC;IACDc,SAAS,EAAGV,KAAK,IAAK;MAClBA,KAAK,CAACL,QAAQ,GAAG,EAAE;MACnBK,KAAK,CAACJ,QAAQ,GAAG,CAAC;MAClBI,KAAK,CAACH,KAAK,GAAG,CAAC;IACjB,CAAC;IACDc,aAAa,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMW,iBAAiB,GAAGX,MAAM,CAACE,OAAO;;MAExC;MACA,MAAMU,oBAAoB,GAAGb,KAAK,CAACL,QAAQ,CAACmB,SAAS,CAACR,OAAO,IAAIA,OAAO,CAACS,SAAS,KAAKH,iBAAiB,CAAC;;MAEzG;MACA,IAAIC,oBAAoB,KAAK,CAAC,CAAC,EAAE;QAC/B,MAAMG,cAAc,GAAGhB,KAAK,CAACL,QAAQ,CAACkB,oBAAoB,CAAC;;QAE3D;QACAb,KAAK,CAACJ,QAAQ,IAAIoB,cAAc,CAACpB,QAAQ;QACzCI,KAAK,CAACH,KAAK,IAAImB,cAAc,CAACP,KAAK,GAAGO,cAAc,CAACpB,QAAQ;;QAE7D;QACAI,KAAK,CAACL,QAAQ,CAACsB,MAAM,CAACJ,oBAAoB,EAAE,CAAC,CAAC;MAChD;;MAEA;MACAb,KAAK,CAACJ,QAAQ,GAAGsB,IAAI,CAACC,GAAG,CAACnB,KAAK,CAACJ,QAAQ,EAAE,CAAC,CAAC;MAC5CI,KAAK,CAACH,KAAK,GAAGqB,IAAI,CAACC,GAAG,CAACnB,KAAK,CAACH,KAAK,EAAE,CAAC,CAAC;IACxC;EACN;AACJ,CACJ,CAAC;AAED,OAAO,MAAM;EAAEE,UAAU;EAAEW,SAAS;EAAEC;AAAc,CAAC,GAAGnB,SAAS,CAAC4B,OAAO;AACzE,eAAe5B,SAAS,CAAC6B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}