{"ast":null,"code":"import { publicRequest, userRequest } from \"../requestMethods\";\nimport { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { registerFailure, registerStart, registerSuccess } from \"./userRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (error) {\n    dispatch(loginFailure());\n  }\n};\nexport const register = async (dispatch, user) => {\n  dispatch(registerStart());\n  try {\n    const res = await publicRequest.post(\"/auth/register\", user);\n    dispatch(registerSuccess(res.data));\n  } catch (error) {\n    dispatch(registerFailure());\n  }\n};\nexport const getUserOrders = async id => {\n  try {\n    const res = await userRequest().get(`/orders/find/${id}`);\n    //console.log(\"Response data:\", res.data); // Log the response data\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getProduct = async productId => {\n  try {\n    const res = await userRequest().get(`/products/find/${productId}`);\n    const product = res.data;\n    return product;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateProductsQuantity = async order => {\n  try {\n    const updatedProducts = order.products.map(async product => {\n      const initialProduct = await getProduct(product.productId);\n      const initialQuantity = initialProduct.quantity;\n      const updatedQuantity = Math.max(initialQuantity - product.quantity, 0);\n      const res = await userRequest().put(`/products/${product.productId}`, {\n        quantity: updatedQuantity\n      });\n      return res.data;\n    });\n    const updatedProductData = await Promise.all(updatedProducts);\n    return updatedProductData;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["publicRequest","userRequest","loginFailure","loginStart","loginSuccess","registerFailure","registerStart","registerSuccess","login","dispatch","user","res","post","data","error","register","getUserOrders","id","get","console","log","getProduct","productId","product","updateProductsQuantity","order","updatedProducts","products","map","initialProduct","initialQuantity","quantity","updatedQuantity","Math","max","put","updatedProductData","Promise","all"],"sources":["C:/Users/AGFirass/React/New folder/CLIENT/src/redux/apiCalls.js"],"sourcesContent":["import { publicRequest, userRequest } from \"../requestMethods\"\r\nimport { loginFailure, loginStart, loginSuccess } from \"./userRedux\"\r\nimport { registerFailure, registerStart, registerSuccess } from \"./userRedux\"\r\n\r\nexport const login = async (dispatch, user) => {\r\n    dispatch(loginStart())\r\n    try {\r\n        const res = await publicRequest.post(\"/auth/login\", user)\r\n        dispatch(loginSuccess(res.data))\r\n    } catch (error) {\r\n        dispatch(loginFailure())\r\n    }\r\n}\r\n\r\nexport const register = async (dispatch, user) => {\r\n    dispatch(registerStart())\r\n    try {\r\n        const res = await publicRequest.post(\"/auth/register\", user)\r\n        dispatch(registerSuccess(res.data))\r\n    } catch (error) {\r\n        dispatch(registerFailure())\r\n    }\r\n}\r\n\r\nexport const getUserOrders = async (id) => {\r\n    try {\r\n      const res = await userRequest().get(`/orders/find/${id}`);\r\n      //console.log(\"Response data:\", res.data); // Log the response data\r\n      return res.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  export const getProduct = async (productId) => {\r\n    try {\r\n      const res = await userRequest().get(`/products/find/${productId}`);\r\n      const product = res.data;\r\n      return product\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  export const updateProductsQuantity = async (order) => {\r\n    try {\r\n      const updatedProducts = order.products.map(async (product) => {\r\n        const initialProduct = await getProduct(product.productId);\r\n        const initialQuantity = initialProduct.quantity;\r\n        const updatedQuantity = Math.max(initialQuantity - product.quantity, 0);\r\n  \r\n        const res = await userRequest().put(`/products/${product.productId}`, {\r\n          quantity: updatedQuantity,\r\n        });\r\n  \r\n        return res.data;\r\n      });\r\n  \r\n      const updatedProductData = await Promise.all(updatedProducts);\r\n      return updatedProductData;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  \r\n\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,WAAW,QAAQ,mBAAmB;AAC9D,SAASC,YAAY,EAAEC,UAAU,EAAEC,YAAY,QAAQ,aAAa;AACpE,SAASC,eAAe,EAAEC,aAAa,EAAEC,eAAe,QAAQ,aAAa;AAE7E,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,KAAK;EAC3CD,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC;EACtB,IAAI;IACA,MAAMQ,GAAG,GAAG,MAAMX,aAAa,CAACY,IAAI,CAAC,aAAa,EAAEF,IAAI,CAAC;IACzDD,QAAQ,CAACL,YAAY,CAACO,GAAG,CAACE,IAAI,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,QAAQ,CAACP,YAAY,CAAC,CAAC,CAAC;EAC5B;AACJ,CAAC;AAED,OAAO,MAAMa,QAAQ,GAAG,MAAAA,CAAON,QAAQ,EAAEC,IAAI,KAAK;EAC9CD,QAAQ,CAACH,aAAa,CAAC,CAAC,CAAC;EACzB,IAAI;IACA,MAAMK,GAAG,GAAG,MAAMX,aAAa,CAACY,IAAI,CAAC,gBAAgB,EAAEF,IAAI,CAAC;IAC5DD,QAAQ,CAACF,eAAe,CAACI,GAAG,CAACE,IAAI,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,QAAQ,CAACJ,eAAe,CAAC,CAAC,CAAC;EAC/B;AACJ,CAAC;AAED,OAAO,MAAMW,aAAa,GAAG,MAAOC,EAAE,IAAK;EACvC,IAAI;IACF,MAAMN,GAAG,GAAG,MAAMV,WAAW,CAAC,CAAC,CAACiB,GAAG,CAAE,gBAAeD,EAAG,EAAC,CAAC;IACzD;IACA,OAAON,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdK,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAOC,SAAS,IAAK;EAC7C,IAAI;IACF,MAAMX,GAAG,GAAG,MAAMV,WAAW,CAAC,CAAC,CAACiB,GAAG,CAAE,kBAAiBI,SAAU,EAAC,CAAC;IAClE,MAAMC,OAAO,GAAGZ,GAAG,CAACE,IAAI;IACxB,OAAOU,OAAO;EAChB,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdK,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMU,sBAAsB,GAAG,MAAOC,KAAK,IAAK;EACrD,IAAI;IACF,MAAMC,eAAe,GAAGD,KAAK,CAACE,QAAQ,CAACC,GAAG,CAAC,MAAOL,OAAO,IAAK;MAC5D,MAAMM,cAAc,GAAG,MAAMR,UAAU,CAACE,OAAO,CAACD,SAAS,CAAC;MAC1D,MAAMQ,eAAe,GAAGD,cAAc,CAACE,QAAQ;MAC/C,MAAMC,eAAe,GAAGC,IAAI,CAACC,GAAG,CAACJ,eAAe,GAAGP,OAAO,CAACQ,QAAQ,EAAE,CAAC,CAAC;MAEvE,MAAMpB,GAAG,GAAG,MAAMV,WAAW,CAAC,CAAC,CAACkC,GAAG,CAAE,aAAYZ,OAAO,CAACD,SAAU,EAAC,EAAE;QACpES,QAAQ,EAAEC;MACZ,CAAC,CAAC;MAEF,OAAOrB,GAAG,CAACE,IAAI;IACjB,CAAC,CAAC;IAEF,MAAMuB,kBAAkB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACZ,eAAe,CAAC;IAC7D,OAAOU,kBAAkB;EAC3B,CAAC,CAAC,OAAOtB,KAAK,EAAE;IACdK,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}